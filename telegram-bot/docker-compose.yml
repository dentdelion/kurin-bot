version: '3.8'

services:
  mysql:
    image: mysql:8.0
    container_name: kurin-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-rootpassword}
      MYSQL_DATABASE: ${MYSQL_DATABASE:-kurin_bot}
      MYSQL_USER: ${MYSQL_USER:-kurin_user}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-kurinpassword}
    volumes:
      - mysql_data:/var/lib/mysql
    ports:
      - "3306:3306"
    networks:
      - bot-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        labels: "service=mysql,application=kurin-bot"

  telegram-bot:
    build: .
    image: lancea18/kurin-bot:latest
    container_name: kurin-telegram-bot
    restart: unless-stopped
    depends_on:
      mysql:
        condition: service_healthy
      loki:
        condition: service_started
    environment:
      # Bot configuration
      - BOT_TOKEN=${BOT_TOKEN}
      - ADMIN_IDS=${ADMIN_IDS}
      
      # Database configuration
      - DATABASE_URL=mysql+pymysql://${MYSQL_USER:-kurin_user}:${MYSQL_PASSWORD:-kurinpassword}@mysql:3306/${MYSQL_DATABASE:-kurin_bot}
      
      # Google Sheets configuration
      - GOOGLE_SHEETS_URL=${GOOGLE_SHEETS_URL}
      - GOOGLE_CREDENTIALS_FILE=/app/credentials/credentials.json
      - GOOGLE_SHEET_NAME=${GOOGLE_SHEET_NAME:-Books}
      
      # Bot settings
      - ALLOWED_TIME_TO_READ_THE_BOOK=${ALLOWED_TIME_TO_READ_THE_BOOK:-14}
      - RULES_TEXT=${RULES_TEXT}
    volumes:
      # Mount Google credentials file
      - ./credentials/credentials.json:/app/credentials/credentials.json:ro
    networks:
      - bot-network
    healthcheck:
      test: ["CMD", "python", "-c", "import sys; sys.exit(0)"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        labels: "service=telegram-bot,application=kurin-bot"

  # Loki - Log aggregation system
  loki:
    image: grafana/loki:2.9.2
    container_name: kurin-loki
    restart: unless-stopped
    ports:
      - "3100:3100"
    volumes:
      - ./loki:/etc/loki
      - loki_data:/loki
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - bot-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:3100/ready"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Promtail - Log collector
  promtail:
    image: grafana/promtail:2.9.2
    container_name: kurin-promtail
    restart: unless-stopped
    volumes:
      - ./promtail:/etc/promtail
      - /var/log:/var/log:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock
    command: -config.file=/etc/promtail/config.yml
    depends_on:
      - loki
    networks:
      - bot-network

  # Grafana - Visualization and dashboards
  grafana:
    image: grafana/grafana:10.2.0
    container_name: kurin-grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD:-admin123}
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-simple-json-datasource
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/dashboards:/var/lib/grafana/dashboards
    depends_on:
      - loki
    networks:
      - bot-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  mysql_data:
  loki_data:
  grafana_data:

networks:
  bot-network:
    driver: bridge 